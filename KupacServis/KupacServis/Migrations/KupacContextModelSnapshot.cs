// <auto-generated />
using System;
using KupacServis.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KupacServis.Migrations
{
    [DbContext(typeof(KupacContext))]
    partial class KupacContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KupacServis.Entities.FizickoLice", b =>
                {
                    b.Property<Guid>("FizickoLiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FizickoLiceId", "KupacId");

                    b.HasIndex("KupacId")
                        .IsUnique();

                    b.ToTable("FizickoLices");

                    b.HasData(
                        new
                        {
                            FizickoLiceId = new Guid("c15ee1bc-0d86-48f8-973a-d9284fafe2d8"),
                            KupacId = new Guid("fead4cee-fa4c-4b6a-8b27-83b70aa43698"),
                            Ime = "Marko",
                            JMBG = "1402993879899",
                            Prezime = "Markovic"
                        },
                        new
                        {
                            FizickoLiceId = new Guid("5b902b20-5f5c-40db-ae32-dc95dd948419"),
                            KupacId = new Guid("5e8b59b3-14c6-417a-bfdc-378f617a5ef4"),
                            Ime = "Jelena",
                            JMBG = "0908991456754",
                            Prezime = "Matic"
                        });
                });

            modelBuilder.Entity("KupacServis.Entities.Kupac", b =>
                {
                    b.Property<Guid>("KupacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrRacuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrTelefona1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrTelefona2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatumPocetkaZabrane")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumPrestankaZabrane")
                        .HasColumnType("datetime2");

                    b.Property<int>("DuzinaTrajanjaZabraneUGod")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FizickoLiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ImaZabranu")
                        .HasColumnType("bit");

                    b.Property<int>("OstvarenaPovrsina")
                        .HasColumnType("int");

                    b.Property<Guid?>("PravnoLiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrioritetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KupacId");

                    b.HasIndex("PrioritetId");

                    b.ToTable("Kupacs");

                    b.HasData(
                        new
                        {
                            KupacId = new Guid("fead4cee-fa4c-4b6a-8b27-83b70aa43698"),
                            BrRacuna = "08728918",
                            BrTelefona1 = "00381947294038",
                            BrTelefona2 = "00381987627389",
                            DatumPocetkaZabrane = new DateTime(2022, 10, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumPrestankaZabrane = new DateTime(2022, 10, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneUGod = 0,
                            Email = "kupac1@gmail.com",
                            ImaZabranu = true,
                            OstvarenaPovrsina = 100000,
                            PrioritetId = new Guid("2915c26d-2912-438a-bc7a-8ed229009412")
                        },
                        new
                        {
                            KupacId = new Guid("9fe2017c-8109-42d9-a7b7-9ff9e016aefb"),
                            BrRacuna = "08729999",
                            BrTelefona1 = "00381947294000",
                            BrTelefona2 = "00381987627111",
                            DatumPocetkaZabrane = new DateTime(2022, 10, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumPrestankaZabrane = new DateTime(2022, 10, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneUGod = 0,
                            Email = "kupac2@gmail.com",
                            ImaZabranu = true,
                            OstvarenaPovrsina = 140000,
                            PrioritetId = new Guid("c555941c-1913-4e0d-946d-a12e2b18c606")
                        },
                        new
                        {
                            KupacId = new Guid("5e8b59b3-14c6-417a-bfdc-378f617a5ef4"),
                            BrRacuna = "R6676390",
                            BrTelefona1 = "00381947294789",
                            BrTelefona2 = "00381987622265",
                            DatumPocetkaZabrane = new DateTime(2021, 10, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumPrestankaZabrane = new DateTime(2023, 10, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneUGod = 2,
                            Email = "kupac3@gmail.com",
                            ImaZabranu = true,
                            OstvarenaPovrsina = 1890000,
                            PrioritetId = new Guid("c555941c-1913-4e0d-946d-a12e2b18c606")
                        });
                });

            modelBuilder.Entity("KupacServis.Entities.KupacJavnoNadmetanje", b =>
                {
                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JavnoNadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KupacId", "JavnoNadmetanjeId");

                    b.ToTable("KupacJavnoNadmetanjes");

                    b.HasData(
                        new
                        {
                            KupacId = new Guid("9fe2017c-8109-42d9-a7b7-9ff9e016aefb"),
                            JavnoNadmetanjeId = new Guid("27641d56-0997-48e2-9ec3-0353aa7925b3")
                        },
                        new
                        {
                            KupacId = new Guid("9fe2017c-8109-42d9-a7b7-9ff9e016aefb"),
                            JavnoNadmetanjeId = new Guid("138ab451-6f31-4069-a2db-592b2724d211")
                        });
                });

            modelBuilder.Entity("KupacServis.Entities.KupacOvlascenoLice", b =>
                {
                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OvlascenoLiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KupacId", "OvlascenoLiceId");

                    b.HasIndex("OvlascenoLiceId");

                    b.ToTable("KupacOvlascenoLices");

                    b.HasData(
                        new
                        {
                            KupacId = new Guid("9fe2017c-8109-42d9-a7b7-9ff9e016aefb"),
                            OvlascenoLiceId = new Guid("1a6290ec-eaef-45a2-a01a-447ed04d6565")
                        });
                });

            modelBuilder.Entity("KupacServis.Entities.OvlascenoLice", b =>
                {
                    b.Property<Guid>("OvlascenoLiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BrTable")
                        .HasColumnType("int");

                    b.Property<Guid?>("DrzavaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmbg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OvlascenoLiceId");

                    b.ToTable("OvlascenoLices");

                    b.HasData(
                        new
                        {
                            OvlascenoLiceId = new Guid("1a6290ec-eaef-45a2-a01a-447ed04d6565"),
                            AdresaId = new Guid("7349c655-8c0d-4743-8f24-8e8b6eeed64b"),
                            BrTable = 8889,
                            DrzavaId = new Guid("95c78cc7-745e-4946-bf7e-1cee81f24f36"),
                            Ime = "Marko",
                            Jmbg = "123456786543224",
                            Prezime = "Janic"
                        });
                });

            modelBuilder.Entity("KupacServis.Entities.PravnoLice", b =>
                {
                    b.Property<Guid>("PravnoLiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KupacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Faks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaticniBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PravnoLiceId", "KupacId");

                    b.HasIndex("KupacId")
                        .IsUnique();

                    b.ToTable("PravnoLices");

                    b.HasData(
                        new
                        {
                            PravnoLiceId = new Guid("83e1cd66-5610-4005-b742-6402d684d8a1"),
                            KupacId = new Guid("9fe2017c-8109-42d9-a7b7-9ff9e016aefb"),
                            Faks = "3456",
                            MaticniBroj = "12345678",
                            Naziv = "PravnoLice1"
                        });
                });

            modelBuilder.Entity("KupacServis.Entities.Prioritet", b =>
                {
                    b.Property<Guid>("PrioritetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OpisPrioriteta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrioritetId");

                    b.ToTable("Prioritets");

                    b.HasData(
                        new
                        {
                            PrioritetId = new Guid("2915c26d-2912-438a-bc7a-8ed229009412"),
                            OpisPrioriteta = "Prvi"
                        },
                        new
                        {
                            PrioritetId = new Guid("c555941c-1913-4e0d-946d-a12e2b18c606"),
                            OpisPrioriteta = "Drugi"
                        });
                });

            modelBuilder.Entity("KupacServis.Entities.FizickoLice", b =>
                {
                    b.HasOne("KupacServis.Entities.Kupac", null)
                        .WithOne("FizickoLice")
                        .HasForeignKey("KupacServis.Entities.FizickoLice", "KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KupacServis.Entities.Kupac", b =>
                {
                    b.HasOne("KupacServis.Entities.Prioritet", "Prioritet")
                        .WithMany()
                        .HasForeignKey("PrioritetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prioritet");
                });

            modelBuilder.Entity("KupacServis.Entities.KupacJavnoNadmetanje", b =>
                {
                    b.HasOne("KupacServis.Entities.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");
                });

            modelBuilder.Entity("KupacServis.Entities.KupacOvlascenoLice", b =>
                {
                    b.HasOne("KupacServis.Entities.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KupacServis.Entities.OvlascenoLice", "OvlascenoLice")
                        .WithMany()
                        .HasForeignKey("OvlascenoLiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");

                    b.Navigation("OvlascenoLice");
                });

            modelBuilder.Entity("KupacServis.Entities.PravnoLice", b =>
                {
                    b.HasOne("KupacServis.Entities.Kupac", null)
                        .WithOne("PravnoLice")
                        .HasForeignKey("KupacServis.Entities.PravnoLice", "KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KupacServis.Entities.Kupac", b =>
                {
                    b.Navigation("FizickoLice");

                    b.Navigation("PravnoLice");
                });
#pragma warning restore 612, 618
        }
    }
}
