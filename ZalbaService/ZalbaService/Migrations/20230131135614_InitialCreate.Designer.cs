// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZalbaService.Entities;

#nullable disable

namespace ZalbaService.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230131135614_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZalbaService.Entities.RadnjaNaOsnovuZalbe", b =>
                {
                    b.Property<Guid>("RadnjaNaOsnovuZalbeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivRadnjeNaOsnovuZalbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RadnjaNaOsnovuZalbeID");

                    b.ToTable("RadnjaNaOsnovuZalbe");

                    b.HasData(
                        new
                        {
                            RadnjaNaOsnovuZalbeID = new Guid("55c00a00-ba2b-4141-966c-5cfb5ea50079"),
                            NazivRadnjeNaOsnovuZalbe = "JN ide u drugi krug sa novim uslovima"
                        },
                        new
                        {
                            RadnjaNaOsnovuZalbeID = new Guid("af98278e-4a44-462f-9978-460b1ab8e2d1"),
                            NazivRadnjeNaOsnovuZalbe = "JN ne ide u drugi krug"
                        });
                });

            modelBuilder.Entity("ZalbaService.Entities.StatusZalbe", b =>
                {
                    b.Property<Guid>("StatusZalbeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivStatusaZalbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusZalbeID");

                    b.ToTable("StatusZalbe");

                    b.HasData(
                        new
                        {
                            StatusZalbeID = new Guid("8d2ce4f7-c2a2-40f1-a92e-f30ac529153e"),
                            NazivStatusaZalbe = "Usvojena"
                        },
                        new
                        {
                            StatusZalbeID = new Guid("5b3470da-a635-4a04-8ef4-988608c46546"),
                            NazivStatusaZalbe = "Odbijena"
                        });
                });

            modelBuilder.Entity("ZalbaService.Entities.TipZalbe", b =>
                {
                    b.Property<Guid>("TipZalbeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivTipaZalbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipZalbeID");

                    b.ToTable("TipZalbe");

                    b.HasData(
                        new
                        {
                            TipZalbeID = new Guid("9d51bfec-5281-4972-970d-b3bb2119e9ed"),
                            NazivTipaZalbe = "Žalba na tok javnog nadmetanja"
                        },
                        new
                        {
                            TipZalbeID = new Guid("d5d6624e-48f6-4167-bb07-9e8589fd9281"),
                            NazivTipaZalbe = "Žalba na Odluku o davanju u zakup"
                        });
                });

            modelBuilder.Entity("ZalbaService.Entities.Zalba", b =>
                {
                    b.Property<Guid>("ZalbaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojNadmetanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojResenja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumPodnosenjaZalbe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumResenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Obrazlozenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PodnosilacZalbeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RadnjaNaOsnovuZalbeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RazlogZalbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatusZalbeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipZalbeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ZalbaID");

                    b.HasIndex("RadnjaNaOsnovuZalbeID");

                    b.HasIndex("StatusZalbeID");

                    b.HasIndex("TipZalbeID");

                    b.ToTable("Zalba");

                    b.HasData(
                        new
                        {
                            ZalbaID = new Guid("b787e1fe-01aa-4aee-a153-0a0acce216a6"),
                            BrojNadmetanja = "Br.nadmetanja-01",
                            BrojResenja = "Br.rešenja-001",
                            DatumPodnosenjaZalbe = new DateTime(2023, 2, 1, 0, 10, 54, 0, DateTimeKind.Unspecified),
                            DatumResenja = new DateTime(2023, 2, 1, 12, 10, 54, 0, DateTimeKind.Unspecified),
                            Obrazlozenje = "Obrazloženje odluke",
                            PodnosilacZalbeID = new Guid("8b88badb-5ec1-4e38-a90d-c376bc31d011"),
                            RadnjaNaOsnovuZalbeID = new Guid("55c00a00-ba2b-4141-966c-5cfb5ea50079"),
                            RazlogZalbe = "Razlog žalbe",
                            StatusZalbeID = new Guid("8d2ce4f7-c2a2-40f1-a92e-f30ac529153e"),
                            TipZalbeID = new Guid("9d51bfec-5281-4972-970d-b3bb2119e9ed")
                        },
                        new
                        {
                            ZalbaID = new Guid("585ac17b-2267-46de-83b0-f4e5c45bc178"),
                            BrojNadmetanja = "Br.nadmetanja-01",
                            BrojResenja = "Br.rešenja-001",
                            DatumPodnosenjaZalbe = new DateTime(2023, 1, 2, 10, 10, 54, 0, DateTimeKind.Unspecified),
                            DatumResenja = new DateTime(2023, 2, 2, 14, 10, 54, 0, DateTimeKind.Unspecified),
                            Obrazlozenje = "Obrazloženje odluke",
                            PodnosilacZalbeID = new Guid("8b88badb-5ec1-4e38-a90d-c376bc31d011"),
                            RadnjaNaOsnovuZalbeID = new Guid("55c00a00-ba2b-4141-966c-5cfb5ea50079"),
                            RazlogZalbe = "Razlog žalbe",
                            StatusZalbeID = new Guid("8d2ce4f7-c2a2-40f1-a92e-f30ac529153e"),
                            TipZalbeID = new Guid("9d51bfec-5281-4972-970d-b3bb2119e9ed")
                        });
                });

            modelBuilder.Entity("ZalbaService.Entities.Zalba", b =>
                {
                    b.HasOne("ZalbaService.Entities.RadnjaNaOsnovuZalbe", "RadnjaNaOsnovuZalbe")
                        .WithMany()
                        .HasForeignKey("RadnjaNaOsnovuZalbeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZalbaService.Entities.StatusZalbe", "StatusZalbe")
                        .WithMany()
                        .HasForeignKey("StatusZalbeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZalbaService.Entities.TipZalbe", "TipZalbe")
                        .WithMany()
                        .HasForeignKey("TipZalbeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RadnjaNaOsnovuZalbe");

                    b.Navigation("StatusZalbe");

                    b.Navigation("TipZalbe");
                });
#pragma warning restore 612, 618
        }
    }
}
